
plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
    id 'edu.sc.seis.launch4j' version '2.4.6'
}

version = '1.0.2'
ext.mainClassName = "bspkrs.mmv.gui.MappingGui"

// Setting up java version stuff

def javaVersion = '1.8'

[compileJava, compileTestJava].each { cJava ->
    cJava.sourceCompatibility = cJava.targetCompatibility = javaVersion
}
eclipse.jdt {
    sourceCompatibility = targetCompatibility = javaVersion
}
idea.project.languageLevel = javaVersion

// End java version stuff

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.google.code.gson', name: 'gson', version: '2.4'
}

[compileJava, compileTestJava].each { cJava ->
    cJava.options.compilerArgs += ['-Xlint:unchecked']
    cJava.options.encoding = 'UTF-8'
    cJava.options.incremental = true
    cJava.options.fork = true
}

processResources {
    from 'LICENSE'
}

build.dependsOn(shadowJar)

jar {
    destinationDir = temporaryDir
}

shadowJar {
    classifier = ''
    dependencies {
        include dependency('com.google.code.gson:gson')
    }
}

jar.manifest {
    attributes 'Main-Class': mainClassName
}

createExe {
    dependsOn 'build'
    mainClassName = mainClassName
    copyConfigurable = project.tasks.shadowJar.outputs.files
    jar = "lib/${project.tasks.shadowJar.archiveName}"
    outputDir = 'libs'
    outfile = tasks.shadowJar.archiveName - '.jar' + '.exe'
    productName = 'MCP Mapping Viewer'
    icon = "${projectDir}/MCPMappingViewer.ico"
    supportUrl = 'https://dccg.herokuapp.com/invite/zeithdev'
    copyright = 'Copyright 2013-2019 bspkrs, portions Copyright 2013 Alex "Immibis" Campbell'
    version = project.version
}

task run(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = mainClassName
}